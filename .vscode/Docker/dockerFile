# Etapa de construcción: Usar Maven y OpenJDK
FROM maven:3.8.6-openjdk-17-slim AS builder

# Instalar Git y OpenSSH
RUN apt-get update && apt-get install -y \
    git \
    openssh-client \
    && apt-get clean

WORKDIR /app

# Clonar el repositorio público de GitHub
RUN git clone https://github.com/Esmichel/ProyectoDeAuditoria.git

WORKDIR /app/ProyectoDeAuditoria

# Ejecutar Maven para compilar y empaquetar la aplicación (Genera el archivo .jar)
RUN mvn clean install -DskipTests

# Etapa de ejecución: Usar una imagen ligera con OpenJDK
FROM openjdk:17-jdk-slim

# Instalar dependencias necesarias (apache, php, etc.)
RUN apt-get update && apt-get install -y \
    apache2 \
    php \
    libapache2-mod-php \
    mysql-server \
    php-mysql \
    vsftpd \
    nano \
    cron \
    wget \
    && apt-get clean && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Copiar el archivo .jar generado en la etapa de construcción
COPY --from=builder /app/ProyectoDeAuditoria/target/ProyectoDeAuditoria.jar /app/app.jar

# Crear usuarios y configurar permisos
RUN useradd -m user1 && echo "user1:password1" | chpasswd && \
    useradd -m user2 && echo "user2:password2" | chpasswd && \
    groupadd admin_group && usermod -aG admin_group user2 && \
    echo 'user2 ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers

# Crear directorios y configurar permisos
RUN mkdir /flags && chmod 700 /flags && \
    mkdir -p /var/ftp && chmod 777 /var/ftp

# Copiar archivos necesarios (app, flags, configuración)
COPY flags/flag.txt /flags/flag.txt
COPY ./vsftpd.conf /etc/vsftpd.conf
RUN chmod 400 /flags/flag.txt

# Configuración de cronjobs
RUN echo "*/1 * * * * root /bin/echo 'Este es un cron job de ejemplo'" > /etc/cron.d/example-cron && \
    echo "* * * * * root /usr/bin/id > /tmp/cron_output.txt" > /etc/cron.d/cron_vuln && \
    chmod 0644 /etc/cron.d/example-cron /etc/cron.d/cron_vuln

# Configuración de un script SUID como ejemplo de vulnerabilidad
RUN echo -e "#!/bin/bash\nchmod 4755 /bin/bash" > /root/set_suid.sh && chmod +x /root/set_suid.sh

# Exponer puertos requeridos
EXPOSE 8080

# Comando de entrada para iniciar servicios
CMD service apache2 start && service vsftpd start && service cron start && java -jar /app/app.jar
